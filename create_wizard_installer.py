"""
Criador de Instalador Wizard Execut√°vel
Gera um instalador .exe profissional
"""

import os
import sys
import subprocess
import shutil
from pathlib import Path

def create_wizard_executable():
    """Cria execut√°vel do instalador wizard"""
    print("üîß Criando instalador wizard execut√°vel...")
    
    try:
        # Verifica se PyInstaller est√° instalado
        try:
            import PyInstaller
            print("‚úÖ PyInstaller encontrado")
        except ImportError:
            print("üì¶ Instalando PyInstaller...")
            subprocess.run([sys.executable, "-m", "pip", "install", "pyinstaller"], check=True)
        
        # Comando PyInstaller para criar instalador
        cmd = [
            sys.executable, "-m", "PyInstaller",
            "--onefile",
            "--windowed",
            "--name=AntiRansomwareShield_Installer",
            "--icon=assets/icon.ico",
            "--add-data=src;src",
            "--add-data=config.json;.",
            "--add-data=requirements.txt;.",
            "--hidden-import=tkinter",
            "--hidden-import=tkinter.ttk",
            "--hidden-import=tkinter.messagebox",
            "--hidden-import=tkinter.filedialog",
            "installer/wizard_installer.py"
        ]
        
        print("‚öôÔ∏è Executando PyInstaller...")
        result = subprocess.run(cmd, capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ Instalador wizard criado com sucesso!")
            print("üìÅ Arquivo: dist/AntiRansomwareShield_Installer.exe")
            return True
        else:
            print(f"‚ùå Erro ao criar instalador: {result.stderr}")
            return False
            
    except Exception as e:
        print(f"‚ùå Erro: {e}")
        return False

def create_installer_package():
    """Cria pacote completo do instalador"""
    print("üì¶ Criando pacote do instalador...")
    
    try:
        # Cria diret√≥rio de distribui√ß√£o
        dist_dir = "dist/installer_wizard"
        os.makedirs(dist_dir, exist_ok=True)
        
        # Copia execut√°vel
        if os.path.exists("dist/AntiRansomwareShield_Installer.exe"):
            shutil.copy("dist/AntiRansomwareShield_Installer.exe", dist_dir)
            print("‚úÖ Execut√°vel copiado")
        else:
            print("‚ùå Execut√°vel n√£o encontrado")
            return False
        
        # Copia arquivos necess√°rios
        files_to_copy = [
            "src",
            "config.json", 
            "requirements.txt",
            "README.md"
        ]
        
        for item in files_to_copy:
            if os.path.exists(item):
                if os.path.isdir(item):
                    shutil.copytree(item, f"{dist_dir}/{item}", dirs_exist_ok=True)
                else:
                    shutil.copy(item, dist_dir)
                print(f"‚úÖ {item} copiado")
        
        # Cria README do instalador
        readme_content = """
# üõ°Ô∏è Anti-Ransomware Shield - Instalador Wizard

## üöÄ Instala√ß√£o

1. **Execute o instalador**:
   - Clique duas vezes em `AntiRansomwareShield_Installer.exe`
   - Siga as instru√ß√µes do wizard

2. **Requisitos**:
   - Windows 10/11
   - Python 3.8+ (ser√° verificado automaticamente)
   - 50 MB de espa√ßo em disco
   - Privil√©gios de administrador (recomendado)

## ‚ú® Caracter√≠sticas do Instalador

- **Interface Wizard**: Instala√ß√£o guiada passo a passo
- **Verifica√ß√£o Autom√°tica**: Checa requisitos do sistema
- **Configura√ß√£o Flex√≠vel**: Escolha op√ß√µes de instala√ß√£o
- **Progresso Visual**: Acompanhe o progresso em tempo real
- **Logs Detalhados**: Veja o que est√° sendo instalado
- **Configura√ß√£o Autom√°tica**: Atalhos, firewall, inicializa√ß√£o

## üéØ Funcionalidades

- ‚úÖ Instala√ß√£o autom√°tica de depend√™ncias
- ‚úÖ Cria√ß√£o de atalhos (√°rea de trabalho e menu iniciar)
- ‚úÖ Configura√ß√£o de inicializa√ß√£o autom√°tica
- ‚úÖ Configura√ß√£o de regras do firewall
- ‚úÖ Verifica√ß√£o de privil√©gios de administrador
- ‚úÖ Interface moderna e intuitiva

## üìû Suporte

Para suporte t√©cnico, consulte:
- README.md - Documenta√ß√£o principal
- TROUBLESHOOTING.md - Solu√ß√£o de problemas
- GitHub Issues - Reportar problemas

---

**üõ°Ô∏è Proteja seu sistema contra ransomware com o Anti-Ransomware Shield!**
"""
        
        with open(f"{dist_dir}/README_Instalador.txt", "w", encoding="utf-8") as f:
            f.write(readme_content)
        
        print("‚úÖ README do instalador criado")
        print(f"üìÅ Pacote criado em: {dist_dir}/")
        return True
        
    except Exception as e:
        print(f"‚ùå Erro ao criar pacote: {e}")
        return False

def main():
    """Fun√ß√£o principal"""
    print("=" * 60)
    print("üõ°Ô∏è  Anti-Ransomware Shield - Criador de Instalador Wizard")
    print("=" * 60)
    print()
    
    # Passo 1: Cria execut√°vel
    if not create_wizard_executable():
        print("‚ùå Falha ao criar execut√°vel. Abortando...")
        return False
    
    print()
    
    # Passo 2: Cria pacote
    if not create_installer_package():
        print("‚ùå Falha ao criar pacote. Abortando...")
        return False
    
    print()
    print("üéâ INSTALADOR WIZARD CRIADO COM SUCESSO!")
    print("=" * 60)
    print()
    print("üìÅ Arquivos criados:")
    print("   ‚Ä¢ dist/AntiRansomwareShield_Installer.exe")
    print("   ‚Ä¢ dist/installer_wizard/ (pacote completo)")
    print()
    print("üöÄ Para distribuir:")
    print("   1. Copie a pasta dist/installer_wizard/ para o computador de destino")
    print("   2. Execute AntiRansomwareShield_Installer.exe")
    print("   3. Siga as instru√ß√µes do wizard")
    print()
    print("‚ú® Caracter√≠sticas do instalador:")
    print("   ‚Ä¢ Interface wizard moderna")
    print("   ‚Ä¢ Instala√ß√£o guiada passo a passo")
    print("   ‚Ä¢ Verifica√ß√£o autom√°tica de requisitos")
    print("   ‚Ä¢ Configura√ß√£o flex√≠vel")
    print("   ‚Ä¢ Progresso visual em tempo real")
    print("   ‚Ä¢ Logs detalhados da instala√ß√£o")
    print("   ‚Ä¢ Configura√ß√£o autom√°tica de atalhos e firewall")
    
    return True

if __name__ == "__main__":
    success = main()
    input("\nPressione Enter para continuar...")
    sys.exit(0 if success else 1)
